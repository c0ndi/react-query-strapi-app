import Head from 'next/head';

import axios from "axios";

import {useMutation, useQuery} from "@tanstack/react-query";

import Loading from "../components/Loading";

import {strapiURL} from "../config/config";
import {Key} from "react";
import {IBlogPost} from "../lib/interfaces";
import Post from "../components/Post";
import ErrorPage from "../components/ErrorPage";
import CreatePostForm from "../components/CreatePostForm";

export default function Home() {
   const query = useQuery(["strapiData"], () => axios.get(`${strapiURL}/api/blog-posts`).then(res => res.data));

   const mutation = useMutation({
      mutationFn: async (variables: IBlogPost) => {
         await axios.post(`${strapiURL}/api/blog-posts`, {
               data: {
                  title: variables.title,
                  slug: variables.slug,
                  content: variables.content
               }
            }
         ).then(res => console.log(res))
      },
      onSuccess: () => {
         query.refetch();
      }
   })

   if (query.isLoading) return <Loading/>;

   if (query.error instanceof Error) return <ErrorPage errorMessage={query.error.message}/>;

   function onSubmit(e: React.FormEvent<HTMLFormElement>) {
      e.preventDefault();

      const target = e.target as any;
      const data = new FormData(target)

      mutation.mutate({
         title: `${data.getAll("title")}`,
         slug: `${data.getAll("title") + "-" + (Math.random() * 10000).toFixed(0) + new Date().getSeconds()}`,
         content: `${data.getAll("content")}`,
      })
   }

   return (
      <div>
         <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app"/>
            <link rel="icon" href="/favicon.ico"/>
         </Head>
         <CreatePostForm onSubmit={onSubmit}/>
         {query.data.data.map(({attributes: {title, slug, content}}: { attributes: IBlogPost }, key: Key) => {
            return (
               <Post
                  key={key}
                  title={title}
                  slug={slug}
                  content={content}
               />
            )
         })}
      </div>
   )
}
